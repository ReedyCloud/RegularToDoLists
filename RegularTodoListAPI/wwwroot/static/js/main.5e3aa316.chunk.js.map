{"version":3,"sources":["Containers/Tasks/NewTask/NewTask.module.scss","Components/UI/X/X.module.scss","Containers/Auth/Login/Login.module.scss","Containers/Tasks/Task/Task.module.scss","Containers/Lists/FullList/FullList.module.scss","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.scss","Components/Navigation/Toolbar/Toolbar.module.scss","Containers/Lists/List/ListState/ListState.module.scss","assets/images/logo/Logo.png","Components/Navigation/NavigationItems/NavigationItems.module.scss","Components/UI/NewList/NewList.module.scss","Components/UI/Button/Button.module.scss","Containers/Lists/List/List.module.scss","Components/UI/Spinner/Spinner.module.scss","Containers/Lists/Lists.module.scss","Containers/ListCreator/ListCreator.module.scss","Components/UI/Backdrop/Backdrop.module.scss","Containers/Auth/helpers/jwt.js","Axios/axios.js","Components/UI/X/X.js","Containers/Tasks/Task/Task.js","store/actions/tasks.js","store/actions/actionTypes.js","Containers/Tasks/NewTask/NewTask.js","Containers/Lists/List/ListState/ListState.js","Containers/Lists/FullList/FullList.js","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","Components/Navigation/NavigationItems/NavigationItems.js","Components/Navigation/Toolbar/Toolbar.js","Components/UI/Button/Button.js","Components/UI/NewList/NewList.js","store/actions/lists.js","Containers/Lists/List/List.js","Components/UI/Spinner/Spinner.js","Components/UI/Backdrop/Backdrop.js","Containers/ListCreator/ListCreator.js","Containers/Lists/Lists.js","Components/UserSettings/UserSettings.js.js","Containers/Auth/Login/Login.js","store/actions/login.js","Containers/Auth/AuthComponent.js","Containers/Auth/Logout/Logout.js","Components/Layout/Layout.js","App/App.js","store/reducers/login.js","store/reducers/lists.js","store/reducers/tasks.js","serviceWorker.js","index.js"],"names":["module","exports","getJwt","localStorage","getItem","instance","axios","create","baseURL","x","className","styles","Xx","Line1","Line2","Task","state","taskId","toDoListId","name","description","priority","onDragStart","this","props","draggable","style","backgroundColor","TaskDeleteButton","onClick","onTaskDelete","id","X","React","Component","connect","dispatch","jwt","delete","headers","Authorization","then","type","actions","NewTask","creatingTask","creatingTaskHandler","prevState","setState","postTaskHandler","data","TodoListId","Name","Description","Priority","Status","onTaskCreated","postTaskValidation","validate","length","Number","isInteger","parseInt","newTaskButton","NewTaskButtonClosed","NewTaskButtonOpened","NewTaskCreator","placeholder","value","onChange","event","target","required","NewTaskButton","listId","post","listState","ListState","onDragOver","onDrop","status","children","tasks","FullList","componentDidUpdate","loading","onGetTasks","match","params","ev","dataTransfer","setData","preventDefault","cat","taskState","toDo","workInProgress","finished","getData","filter","task","put","tasksUpdateHandler","states","forEach","push","updateTasks","e","key","ListTitle","title","tasksUpdate","get","res","fetchedTasks","todoItems","map","withRouter","navigationItem","NavigationItem","to","link","activeClassName","active","exact","navigationItems","NavigationItems","Toolbar","Logo","src","alt","button","btnType","clicked","onListCreate","NewList","Button","List","listDelete","spinner","Loader","backdrop","Backdrop","ListCreator","onListCreateCancel","onSetListTitle","onListCreated","lists","creating","Lists","onGetLists","listSelectHandler","history","pathname","Spinner","list","onListDelete","creator","newList","fetchedLists","userSettings","paddingTop","textAlign","Login","form","Form","onSubmit","onLoginUser","email","password","onSetEmail","onSetPassword","onSetLogin","fontSize","login","onRegisterUser","Container","setItem","token","catch","alert","AuthComponent","Logout","removeItem","Layout","path","component","UserSettings","App","initialState","setEmail","action","setPassword","setLogin","reducer","getLists","createList","createListCancel","setListTitle","listsUpdate","getTasks","Boolean","window","location","hostname","composeEnhancers","compose","rootReducer","combineReducers","loginReducer","listsReducer","tasksReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e3aa316.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewTask\":\"NewTask_NewTask__3FlVc\",\"NewTaskButtonClosed\":\"NewTask_NewTaskButtonClosed__3Vk3a\",\"NewTaskButtonOpened\":\"NewTask_NewTaskButtonOpened__3fXYV\",\"NewTaskCreator\":\"NewTask_NewTaskCreator__1URHq\",\"NewTaskButton\":\"NewTask_NewTaskButton__30ZkE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Xx\":\"X_Xx__2Q4Jh\",\"Line1\":\"X_Line1__3lbUC\",\"Line2\":\"X_Line2__stPfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Login_Container__13yD7\",\"Form\":\"Login_Form__3UJuF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Task\":\"Task_Task__2yyQx\",\"TaskDeleteButton\":\"Task_TaskDeleteButton__Iv8b7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListTitle\":\"FullList_ListTitle__1mjPw\",\"FullList\":\"FullList_FullList__28Io_\",\"ListState\":\"FullList_ListState__1DN_P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2sbDZ\",\"active\":\"NavigationItem_active__3QmWx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__89xbM\",\"Logo\":\"Toolbar_Logo__2gXub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListState\":\"ListState_ListState__TcOIH\"};","module.exports = __webpack_public_path__ + \"static/media/Logo.885bbaab.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__95t72\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewList\":\"NewList_NewList__3cvgU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"Button_btnDelete__2GLHY\",\"btnOpen\":\"Button_btnOpen__1Cxa9\",\"btnNewList\":\"Button_btnNewList__32Bvg\",\"btnCreateList\":\"Button_btnCreateList__9LIs4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List_List__1HE95\",\"d\":\"List_d__CLEXm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2ZOi9\",\"load4\":\"Spinner_load4__3Do8-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Lists\":\"Lists_Lists__1Q81Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListCreator\":\"ListCreator_ListCreator__2Mkp9\",\"enter\":\"ListCreator_enter__2w9UH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__k_6a5\",\"enter\":\"Backdrop_enter__3a96t\"};","export const getJwt = () => {\r\n  return localStorage.getItem('jwt');\r\n}","import axios from 'axios';\r\nconst instance = axios.create({\r\n  baseURL: '/api/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\n\r\nimport styles from './X.module.scss';\r\n\r\nconst x = () => {\r\n  return(\r\n    <div className={styles.Xx}>\r\n      <div className={styles.Line1}></div>\r\n      <div className={styles.Line2}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default x;","import React from 'react';\r\nimport {connect} from 'react-redux'\r\n\r\nimport X from '../../../Components/UI/X/X';\r\nimport styles from './Task.module.scss';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Task extends React.Component {\r\n\r\n  state = {\r\n    taskId: null,\r\n    toDoListId: null,\r\n    name : '',\r\n    description: '',\r\n    priority: 0,\r\n    state: 0\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {...state, priority: props.priority, id: props.id}\r\n  }\r\n\r\n  render () {\r\n\r\n  return(\r\n    <div \r\n    onDragStart={this.props.onDragStart}\r\n      draggable\r\n      className={styles.Task}\r\n      style={{backgroundColor:'rgb(255,'+ (255 - 10.5 * this.state.priority)+ ',' + (255 - 25.5 * this.state.priority)+  ')' }}>\r\n        <button className={styles.TaskDeleteButton} onClick={() => this.props.onTaskDelete(this.state.id)} ><X /></button>\r\n      <h2> {this.props.name}</h2>\r\n      <p>\r\n        {this.props.description}\r\n      </p>\r\n    \r\n    </div>\r\n  );\r\n  }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTaskDelete: (id) => dispatch(actions.deleteTask(id))\r\n  };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Task);","import * as actionTypes from './actionTypes';\r\nimport axios from '../../Axios/axios';\r\nimport {getJwt} from '../../Containers/Auth/helpers/jwt';\r\n\r\nexport const setTasks = (tasks) => {\r\n  return {\r\n    type: actionTypes.GET_TASKS,\r\n    tasks: tasks\r\n  };\r\n}\r\n\r\nexport const getTasks = (id) => {\r\n  return dispatch => {\r\n    const jwt = getJwt();\r\n    axios.get('todo/GetTodoList?todoListId=' + id, {\r\n      headers: {\r\n        Authorization: `Bearer ${jwt}`\r\n      }\r\n    }).then(res => {\r\n      let fetchedTasks = [];\r\n      fetchedTasks = res.data.todoItems.map(task => {\r\n        return {\r\n          id: task.id,\r\n          name: task.name,\r\n          description: task.description,\r\n          priority: task.priority,\r\n          status: task.status,\r\n          key: task.id\r\n        }\r\n      });\r\n      fetchedTasks.forEach(task => {\r\n        switch(task.status){\r\n          case 0:\r\n            task.status = 'toDo';\r\n            break;\r\n          case 1:\r\n            task.status = 'workInProgress';\r\n            break;\r\n          case 2:\r\n            task.status = 'finished';\r\n            break;\r\n            default:\r\n              break;\r\n        }\r\n      });\r\n      dispatch(setTasks(fetchedTasks));\r\n    });\r\n  }\r\n}\r\n\r\nexport const updateTasks = () => {\r\n  return {\r\n    type: actionTypes.UPDATE_TASKS\r\n  };\r\n}\r\n\r\nexport const deleteTask = (id) => {\r\n  return dispatch => {\r\n    const jwt = getJwt();\r\n    axios.delete('todo/DeleteTodoItem?todoItemId=' + id, {\r\n      headers: {\r\n        Authorization: `Bearer ${jwt}`\r\n      }\r\n    }).then(() => {\r\n      dispatch(updateTasks())\r\n    });\r\n  }\r\n}\r\n\r\nexport const createTask = (data) => {\r\n  return dispatch => {\r\n    const jwt = getJwt();\r\n    axios.post('todo/AddTodoItem', data, {\r\n      headers: {\r\n        Authorization: `Bearer ${jwt}`\r\n      }\r\n    }).then(() => {\r\n      dispatch(updateTasks())\r\n    });\r\n  }\r\n}","export const SET_EMAIL= 'SET_EMAIL';\r\nexport const SET_PASSWORD= 'SET_PASSWORD';\r\nexport const LOGIN_USER= 'LOGIN_USER';\r\nexport const REGISTER_USER= 'REGISTER_USER';\r\nexport const SET_LOGIN= 'SET_LOGIN';\r\n\r\nexport const GET_LISTS= 'GET_LISTS';\r\nexport const CREATE_LIST= 'CREATE_LIST';\r\nexport const CREATE_LIST_CANCEL= 'CREATE_LIST_CANCEL';\r\nexport const SET_LIST_TITLE= 'SET_LIST_TITLE';\r\nexport const LISTS_UPDATE= 'LISTS_UPDATE';\r\n\r\nexport const GET_TASKS= 'GET_TASKS';\r\nexport const UPDATE_TASKS= 'UPDATE_TASKS';\r\nexport const CREATE_TASK= 'CREATE_TASK';\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\n\r\nimport * as actions from '../../../store/actions/index';\r\nimport styles from './NewTask.module.scss';\r\n\r\nclass NewTask extends React.Component {\r\n  \r\n  state = {\r\n    toDoListId: null,\r\n    name : '',\r\n    description: '',\r\n    priority: 1,\r\n    state: 0,\r\n    creatingTask: false\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {...state, toDoListId: props.listId}\r\n  }\r\n\r\n  creatingTaskHandler = () => {\r\n    let prevState = this.state.creatingTask;\r\n    this.setState({creatingTask: !prevState});\r\n  }\r\n\r\n\r\n  postTaskHandler = () => {\r\n    const data = {\r\n      TodoListId: this.state.toDoListId,\r\n      Name: this.state.name,\r\n      Description: this.state.description,\r\n      Priority: this.state.priority,\r\n      Status: this.state.state\r\n    };\r\n    this.props.onTaskCreated(data)\r\n  }\r\n\r\n  postTaskValidation = () => {\r\n    let validate = true;\r\n    if(this.state.name.length < 3) {\r\n      validate = false;\r\n    }\r\n\r\n    if( validate && Number.isInteger(parseInt(this.state.priority, 10))) {\r\n      this.postTaskHandler();\r\n      this.setState({creatingTask: false, name: '', description:'', priority: 1})\r\n    }\r\n  }\r\n\r\n\r\n  render () {\r\n\r\n    let newTaskButton = <div onClick={this.creatingTaskHandler} className={styles.NewTaskButtonClosed} >New Task </div>;\r\n    if(this.state.creatingTask) {\r\n      newTaskButton =   <div onClick={this.creatingTaskHandler} className={styles.NewTaskButtonOpened} >Close </div>;\r\n    }\r\n\r\n  return(\r\n    <div className={styles.NewTask}>\r\n      {newTaskButton}\r\n      {\r\n        !this.state.creatingTask ?\r\n           null :\r\n            <div className={styles.NewTaskCreator}>\r\n              <h4>Title:</h4>\r\n              <input type='text' placeholder='my name' value={this.state.name}\r\n                onChange={(event)=> this.setState({name: event.target.value}) } required/>\r\n                <h4>Description:</h4>\r\n              <textarea type='text' placeholder='optional' value={this.state.description}\r\n                onChange={(event)=> this.setState({description: event.target.value}) } required/>\r\n                <h4>Priority:</h4>\r\n              <input type='text' placeholder='my prio' value={this.state.priority}\r\n                onChange={(event)=> this.setState({priority: event.target.value}) } required/>\r\n                <button onClick={this.postTaskValidation} className={styles.NewTaskButton} >\r\n                  Create\r\n                </button>\r\n            </div>\r\n      }\r\n    </div>\r\n  );\r\n\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTaskCreated: (data) => dispatch(actions.createTask(data))\r\n  };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(NewTask);","import React from 'react';\r\n\r\nimport styles from './ListState.module.scss';\r\n\r\nconst listState = (props) => {\r\n  return(\r\n    <div className={styles.ListState} \r\n    onDragOver={props.onDragOver}\r\n    onDrop={props.onDrop} >\r\n      <div>\r\n       <h3> {props.status}</h3>\r\n        {props.children}\r\n        {props.tasks}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default listState;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\n\r\nimport {getJwt} from '../../Auth/helpers/jwt';\r\nimport axios from '../../../Axios/axios';\r\nimport Task from '.././../Tasks/Task/Task';\r\nimport NewTask from '../../Tasks/NewTask/NewTask';\r\nimport styles from './FullList.module.scss';\r\nimport ListState from '../List/ListState/ListState';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass FullList extends React.Component {\r\n\r\n\r\n  componentDidMount () {\r\n    this.props.onGetTasks(this.props.match.params.id);\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    if(this.props.loading){\r\n      this.props.onGetTasks(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  onDragStart = (ev, id) => {\r\n    ev.dataTransfer.setData('id', id);\r\n  }\r\n\r\n  onDragOver = (ev) => {\r\n    ev.preventDefault();\r\n  }\r\n\r\n  onDrop = (ev, cat) => {\r\n    const jwt = getJwt();\r\n\r\n    const taskState = {\r\n      toDo: 0,\r\n      workInProgress: 1,\r\n      finished: 2\r\n\r\n    }\r\n    let id = ev.dataTransfer.getData('id');\r\n    let tasks = this.props.tasks.filter((task) => {\r\n      if(task.id === Number.parseInt(id)) {\r\n        task.status = cat;\r\n        axios.put('todo/ChangeStatus?todoItemId='+ task.id +'&status=' + taskState[task.status], null, {\r\n          headers: {\r\n            Authorization: `Bearer ${jwt}`\r\n          }\r\n        });\r\n      }\r\n      return task;\r\n    });\r\n\r\n    this.setState({tasks: tasks});\r\n  }\r\n\r\n  tasksUpdateHandler = () => {\r\n    this.setState({loading: true});\r\n  }\r\n\r\n  render () {\r\n\r\n    let states = {\r\n      toDo: [],\r\n      workInProgress: [],\r\n      finished: []\r\n    }\r\n\r\n    this.props.tasks.forEach(task => {\r\n      states[task.status].push(\r\n        <Task\r\n          updateTasks={this.tasksUpdateHandler}\r\n          description={task.description}\r\n          priority={task.priority}\r\n          name={task.name}\r\n          onDragStart = {(e) => this.onDragStart(e, task.id)}\r\n          id={task.id}\r\n          key={task.id}/>\r\n      );\r\n    });\r\n\r\n  return(\r\n    <>\r\n      <div className={styles.ListTitle}>\r\n        {this.props.match.params.title}\r\n      </div>\r\n\r\n      <div className={styles.FullList}>\r\n        <ListState \r\n          status='To Do:'\r\n          tasks={states.toDo}\r\n          onDragOver={(e) =>this.onDragOver(e)}\r\n          onDrop={(e) => {this.onDrop(e, 'toDo')}}>\r\n            <NewTask listId={this.props.match.params.id} tasksUpdate={this.tasksUpdateHandler} />\r\n        </ListState>\r\n        <ListState \r\n          status='Work in Poggers:'\r\n          tasks={states.workInProgress}\r\n          onDragOver={(e) =>this.onDragOver(e)}\r\n          onDrop={(e) => {this.onDrop(e, 'workInProgress')}}/>\r\n        <ListState\r\n          status='Finished:'\r\n          tasks={states.finished}\r\n          onDragOver={(e) =>this.onDragOver(e)}\r\n          onDrop={(e) => {this.onDrop(e, 'finished')}}/>\r\n      </div>\r\n    </>\r\n  );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tasks: state.tasks.tasks,\r\n    loading: state.tasks.loading\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onGetTasks: (id) => dispatch(actions.getTasks(id)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(FullList));","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport styles from './NavigationItem.module.scss';\r\n\r\nconst navigationItem = (props) => {\r\n  return(\r\n    <div className={styles.NavigationItem}>\r\n      <NavLink to={props.link} activeClassName={styles.active} exact={props.exact}>\r\n        {props.children}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport styles from './NavigationItems.module.scss';\r\n\r\nconst navigationItems = () => {\r\n  return(\r\n    <nav className={styles.NavigationItems}>\r\n      <NavigationItem link=\"/logged/lists\" exact >Lists</NavigationItem>\r\n      <NavigationItem link=\"/logged/settings\">Setting</NavigationItem>\r\n      <NavigationItem link=\"/logged/logout\" >Logout</NavigationItem>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport Logo from '../../../assets/images/logo/Logo.png';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport styles from './Toolbar.module.scss';\r\n\r\nconst Toolbar = () => {\r\n  return(\r\n    <div className={styles.Toolbar}>\r\n      <img className={styles.Logo} src={Logo} alt=\"\" />\r\n      <NavigationItems />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;","import React from 'react';\r\n\r\nimport styles from './Button.module.scss';\r\n\r\nconst button = (props) => {\r\n  return(\r\n    <button className={styles[props.btnType]} onClick={props.clicked}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default button;","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport styles from './NewList.module.scss';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\nimport Button from '../Button/Button';\r\n\r\nconst newList = (props) => {\r\n  return(\r\n    <div className={styles.NewList}>\r\n      <h2>New List</h2>\r\n      <Button btnType='btnNewList' clicked={props.onListCreate}>\r\n        Create\r\n      </Button>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDistpatchToProps = dispatch => {\r\n  return {\r\n    onListCreate: () => dispatch(actions.createList()),\r\n  };\r\n};\r\n\r\nexport default connect(null,mapDistpatchToProps)(newList);","import * as actionTypes from './actionTypes';\r\nimport {getJwt} from '../../Containers/Auth/helpers/jwt';\r\nimport axios from '../../Axios/axios';\r\n\r\nexport const setLists = (lists) => {\r\n  return {\r\n    type: actionTypes.GET_LISTS,\r\n    lists: lists\r\n  };\r\n};\r\n\r\nexport const getLists = () => {\r\n  return dispatch => {\r\n    const jwt = getJwt();\r\n    axios.get('todo/GetTodoLists', {\r\n      headers: {\r\n        Authorization: `Bearer ${jwt}`\r\n      }\r\n    }).then(res => {\r\n      let fetchedLists = [];\r\n      fetchedLists = res.data.map(list => {\r\n        return {\r\n          id: list.id,\r\n          title: list.title,\r\n          status: list.status,\r\n          key: list.id\r\n        };\r\n      });\r\n      dispatch(setLists(fetchedLists));\r\n    });\r\n  }\r\n}\r\n\r\nexport const createList = () => {\r\n  return {\r\n    type: actionTypes.CREATE_LIST\r\n  };\r\n};\r\n\r\nexport const createListCancel = () => {\r\n  return {\r\n    type: actionTypes.CREATE_LIST_CANCEL\r\n  };\r\n};\r\n\r\nexport const setListTitle = (title) => {\r\n  return {\r\n    type: actionTypes.SET_LIST_TITLE,\r\n    title: title\r\n  }\r\n}\r\n\r\nexport const listsUpdate = () => {\r\n  return {\r\n    type: actionTypes.LISTS_UPDATE\r\n  }\r\n}\r\n\r\nexport const listCreated = (title) => {\r\n  return dispatch => {\r\n    const jwt = getJwt();\r\n    const data = {\r\n      title: title,\r\n    };\r\n    axios.post('todo/AddTodoList', data, {\r\n      headers: {\r\n        Authorization: `Bearer ${jwt}`\r\n      }\r\n    }).then(() =>{\r\n      dispatch(listsUpdate());\r\n    });\r\n  };\r\n}\r\n\r\nexport const listDeleted = (id) => {\r\n  return dispatch => {\r\n    const jwt = getJwt();\r\n    axios.delete('todo/DeleteTodoList?todoListId=' + id, {\r\n      headers: {\r\n        Authorization: `Bearer ${jwt}`\r\n      }\r\n    }).then(() => {\r\n      dispatch(listsUpdate())\r\n    });\r\n  };\r\n}\r\n\r\n","import React from 'react';\r\nimport Button from '../../../Components/UI/Button/Button';\r\n\r\nimport styles from './List.module.scss';\r\n\r\nclass List extends React.Component {\r\n\r\n  render () {\r\n    return(\r\n      <div className={styles.List}>\r\n        <Button btnType={'btnDelete'} clicked={this.props.listDelete} > Delete </Button>\r\n        <h2>{this.props.title}</h2>\r\n        <div>\r\n        <Button btnType={'btnOpen'} clicked={this.props.clicked}> Open </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default List;","import React from 'react';\r\n\r\nimport styles from './Spinner.module.scss';\r\n\r\nconst spinner = () => {\r\n  return(\r\n    <div className={styles.Loader}>Loading...</div>\r\n  );\r\n};\r\n\r\nexport default spinner;","import React from 'react';\r\n\r\nimport styles from './Backdrop.module.scss';\r\n\r\nconst backdrop = (props) => {\r\n  return(\r\n    <div className={styles.Backdrop} onClick={props.clicked} ></div>\r\n  );\r\n};\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport styles from './ListCreator.module.scss';\r\nimport Backdrop from '../../Components/UI/Backdrop/Backdrop';\r\nimport Button from '../../Components/UI/Button/Button';\r\n\r\nclass ListCreator extends React.Component {\r\n  \r\n  render () {\r\n    return(\r\n      <>\r\n      <Backdrop clicked={this.props.onListCreateCancel} />\r\n      <div className={styles.ListCreator}>\r\n        <h3>\r\n          Name Me!  \r\n        </h3> \r\n          <input type='text' placeholder='my name' value={this.props.title}\r\n          onChange={(e)=> this.props.onSetListTitle(e.target.value) } required/>\r\n          <Button  clicked={() => this.props.onListCreated(this.props.title)} btnType={'btnCreateList'}>\r\n            Create\r\n          </Button>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    title: state.lists.title,\r\n    creating: state.lists.creating\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSetListTitle: (title) => dispatch(actions.setListTitle(title)),\r\n    onListCreateCancel: () => dispatch(actions.createListCancel()),\r\n    onListCreated: (title) => dispatch(actions.listCreated(title))\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListCreator);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport NewList from '../../Components/UI/NewList/NewList';\r\nimport List from './List/List';\r\nimport Spinner from '../../Components/UI/Spinner/Spinner';\r\nimport styles from './Lists.module.scss';\r\nimport ListCreator from '../ListCreator/ListCreator';\r\n\r\nclass Lists extends React.Component {\r\n\r\n  componentDidMount () {\r\n    this.props.onGetLists();\r\n}\r\n  componentDidUpdate = () => {\r\n      if(this.props.loading){\r\n        this.props.onGetLists();\r\n    }\r\n  }\r\n\r\n  listSelectHandler = (id, title) => {\r\n    this.props.history.push({pathname:'lists/'+ id + '/' + title});\r\n  }\r\n\r\n  render () {\r\n\r\n    let lists = null;\r\n    if(this.props.lists.length === 0){\r\n     lists = <Spinner />\r\n    }\r\n    if(!this.props.loading){\r\n      lists = this.props.lists.map(list =>{\r\n\r\n        return (\r\n          <List\r\n            key={list.id}\r\n            title={list.title}\r\n            clicked={() =>this.listSelectHandler(list.id, list.title)}\r\n            listDelete={() => this.props.onListDelete(list.id)}\r\n              />\r\n        );\r\n      });\r\n    }\r\n\r\n    let creator = null;\r\n    if(this.props.creating) {\r\n      creator = <ListCreator />;\r\n    }\r\n\r\n    let newList = null;\r\n    if(!this.props.loading) {\r\n      newList = <NewList />;\r\n    }\r\n\r\n    return(\r\n      <div className={styles.Lists}>\r\n        {lists}\r\n        {newList}\r\n        {creator}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lists: state.lists.lists,\r\n    creating: state.lists.creating,\r\n    loading: state.lists.loading,\r\n  };\r\n};\r\n\r\nconst mapDistpatchToProps = dispatch => {\r\n  return {\r\n    onGetLists: () => dispatch(actions.getLists()),\r\n    onListDelete: (id) => dispatch(actions.listDeleted(id))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDistpatchToProps )(Lists);","import React from 'react';\r\n\r\nconst userSettings = (props) => {\r\n  return(\r\n    <div style={{paddingTop:'300px', textAlign: 'center'}}>\r\n      Work in Progrss\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default userSettings;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport styles from './Login.module.scss';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Login extends React.Component {\r\n\r\n  render () {\r\n\r\n    let form = (\r\n      <div className={styles.Form}>\r\n        <div>Login</div>\r\n        <form onSubmit={ (e) => this.props.onLoginUser(e, this.props.email, this.props.password, this.props) }>\r\n          <label>email/login</label>\r\n          <input type=\"text\" name=\"email\" onChange={e => this.props.onSetEmail(e.target.value)} value={this.props.email} />\r\n          <label>password</label>\r\n          <input type=\"password\" name=\"email\" onChange={ e => this.props.onSetPassword(e.target.value)} value={this.props.password} />\r\n          <button>Login</button>\r\n        </form>\r\n        <p>Dont have an account <span onClick={this.props.onSetLogin}>Register here</span></p>\r\n        <div style={{fontSize: '13px'}}>for testing: login: demo, password: demo</div>\r\n      </div>\r\n    );\r\n\r\n    if(!this.props.login){\r\n      form = (\r\n        <div className={styles.Form}>\r\n          <div>Register</div>\r\n          <form onSubmit={ (e) => this.props.onRegisterUser(e, this.props.email, this.props.password) }>\r\n            <label>email/login</label>\r\n            <input type=\"text\" name=\"email\" onChange={e => this.props.onSetEmail(e.target.value)} value={this.props.email} />\r\n            <label>password</label>\r\n            <input type=\"password\" name=\"email\" onChange={ e => this.props.onSetPassword(e.target.value)} value={this.props.password} />\r\n            <button>Register</button>\r\n        </form>\r\n          <p>Already having an account <span onClick={this.props.onSetLogin}>Login here</span></p>\r\n          <div style={{fontSize: '13px'}}>for testing: login: demo, password: demo</div>\r\n      </div>\r\n      );\r\n    }\r\n\r\n  return(\r\n    <div className={styles.Container}>\r\n      {form}\r\n    </div>\r\n  );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    email: state.login.email,\r\n    password: state.login.password,\r\n    login: state.login.login\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSetEmail: (email) => dispatch(actions.setEmail(email)),\r\n    onSetPassword: (password) => dispatch(actions.setPassword(password)),\r\n    onSetLogin: () => dispatch(actions.setLogin()),\r\n    onLoginUser: (e, email, password, props) => dispatch(actions.loginUser(e, email, password, props)),\r\n    onRegisterUser: (e, email, password) => dispatch(actions.registerUser(e, email, password))\r\n  };\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login) ;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../Axios/axios';\r\n\r\nexport const setEmail = (email) => {\r\n  return {\r\n    type: actionTypes.SET_EMAIL,\r\n    email: email\r\n  };\r\n}\r\n\r\nexport const setPassword = (password) => {\r\n  return {\r\n    type: actionTypes.SET_PASSWORD,\r\n    password: password\r\n  }\r\n}\r\n\r\nexport const setLogin=() => {\r\n  return {\r\n    type: actionTypes.SET_LOGIN\r\n  };\r\n}\r\n\r\nexport const loginUser = (e, email, password, props) => {\r\n  e.preventDefault();\r\n  return () => {\r\n    axios.post('auth/login', {\r\n      email: email,\r\n      password: password\r\n    }).then(res => {\r\n      localStorage.setItem('jwt', res.data.token);\r\n      props.history.push('/logged/lists');\r\n    });\r\n  }\r\n}\r\n\r\nexport const registerUser = (e, email, password) => {\r\n  e.preventDefault();\r\n  return () => {\r\n    axios.post('auth/register', {\r\n      email: email,\r\n      password: password\r\n    }).catch(() => alert('uzytkownik juz istnieje'));\r\n  }\r\n}","import React from 'react';\r\nimport { getJwt } from './helpers/jwt';\r\nimport axios from '../../Axios/axios';\r\n\r\nclass AuthComponent extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const jwt = getJwt();\r\n    if(!jwt) {\r\n      this.props.history.push('/');\r\n    }\r\n    axios.get('/getUser', {headers:{Authorization: `Bearer ${jwt}`}});\r\n\r\n  }\r\n\r\n  render () {\r\n  return(\r\n    <div>\r\n      {this.props.children}\r\n    </div>\r\n  );\r\n  }\r\n};\r\n\r\nexport default AuthComponent;","import React from 'react';\r\n\r\nclass Logout extends React.Component {\r\n\r\n  componentDidMount() {\r\n    localStorage.removeItem('jwt');\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Logout;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport FullList from '../../Containers/Lists/FullList/FullList';\r\nimport Toolbar from '../../Components/Navigation/Toolbar/Toolbar';\r\nimport Lists  from '../../Containers/Lists/Lists';\r\nimport UserSettings from '../../Components/UserSettings/UserSettings.js';\r\nimport Login from '../../Containers/Auth/Login/Login';\r\nimport AuthComponent from '../../Containers/Auth/AuthComponent';\r\nimport Logout from '../../Containers/Auth/Logout/Logout';\r\n\r\nclass Layout extends React.Component {\r\n  render () {\r\n    return(\r\n      <>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Login} />\r\n        <Route path=\"/logged\"  component={AuthComponent} >\r\n        <Toolbar />\r\n        <Route path=\"/logged/settings\" component={UserSettings} />\r\n        <Route path=\"/logged/logout\" component={Logout} />\r\n        <Route path=\"/logged/lists\" exact component={Lists} />\r\n        <Route path=\"/logged/lists/:id/:title\" exact component={FullList} />\r\n        </Route>\r\n      </Switch>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Layout;","import React from 'react';\r\nimport './App.css';\r\n\r\nimport Layout from '../Components/Layout/Layout';\r\n\r\nfunction App() {\r\n  return (\r\n    <Layout />\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  email: '',\r\n  password: '',\r\n  login: true\r\n}\r\n\r\nconst setEmail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    email: action.email\r\n  }\r\n}\r\n\r\nconst setPassword = (state, action) => {\r\n  return {\r\n    ...state,\r\n    password: action.password\r\n  }\r\n}\r\n\r\nconst setLogin = (state) => {\r\n  const updatedState = state.login;\r\n  return {\r\n    ...state,\r\n    login: !updatedState\r\n  }\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_EMAIL: return setEmail(state, action);\r\n    case actionTypes.SET_PASSWORD: return setPassword(state, action);\r\n    case actionTypes.SET_LOGIN: return setLogin(state);\r\n    default: return state;\r\n  }\r\n};\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  lists: [],\r\n  creating: false,\r\n  loading: true,\r\n  title: ''\r\n}\r\n\r\nconst getLists = (state, action) => {\r\n  return {\r\n    ...state,\r\n    lists: action.lists,\r\n    loading: false\r\n  };\r\n}\r\n\r\nconst createList = (state) => {\r\n  return {\r\n    ...state,\r\n    creating: true\r\n  };\r\n}\r\n\r\nconst createListCancel = (state) => {\r\n  return {\r\n    ...state,\r\n    creating: false\r\n  };\r\n}\r\n\r\nconst setListTitle = (state, action) => {\r\n  return {\r\n    ...state,\r\n    title: action.title\r\n  };\r\n}\r\n\r\nconst listsUpdate = (state) => {\r\n  return {\r\n    ...state,\r\n    creating: false,\r\n    loading: true,\r\n    title: ''\r\n  }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n      case actionTypes.GET_LISTS: return getLists(state, action);\r\n      case actionTypes.CREATE_LIST: return createList(state);\r\n      case actionTypes.CREATE_LIST_CANCEL: return createListCancel(state);\r\n      case actionTypes.SET_LIST_TITLE: return setListTitle(state, action);\r\n      case actionTypes.LISTS_UPDATE: return listsUpdate(state);\r\n  \r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  loading: true\r\n}\r\n\r\nconst getTasks = (state, action) => {\r\n  return {\r\n    ...state,\r\n    tasks: action.tasks,\r\n    loading: false\r\n  };\r\n}\r\n\r\nconst updateTasks = (state) => {\r\n  return {\r\n    ...state,\r\n    loading: true\r\n  }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case actionTypes.GET_TASKS: return getTasks(state, action);\r\n    case actionTypes.UPDATE_TASKS: return updateTasks(state);\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport default reducer;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose, combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport loginReducer from './store/reducers/login';\r\nimport listsReducer  from './store/reducers/lists';\r\nimport tasksReducer from './store/reducers/tasks';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst composeEnhancers = compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  login: loginReducer,\r\n  lists: listsReducer,\r\n  tasks: tasksReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}